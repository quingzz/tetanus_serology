[
  {
    "objectID": "ida.html",
    "href": "ida.html",
    "title": "IDA for tetanus data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(gt)\nlibrary(mgcv)\n\nall_tetanus <- readRDS(\"data/preprocessed/all_samples.rds\")\n\nThere is currently no specific threshold to classify tetanus serostatus, for this analysis, a conservative threshold of 0.1IU/ml is used.\n\n# threshold to be considered positive\npositive_threshold <- 0.1\n\n\n\n\nLabel whether it is oucru or hcdc sample\nCompute rounded age\nCompute concentration\n\nUse median value to compute where available, use lower or upper otherwise\n\nLabel whether the sample is considered positive using 0.1IU/ml threshold\n\nAlso filter samples from HCMC only\n\n\nCode for preprocessing data\npreprocessed_data <- all_tetanus %>% \n  mutate(\n    log_concentration = case_when(\n      !is.na(median) ~ median,\n      !is.na(upper) ~ upper,\n      !is.na(lower) ~ lower,\n      .default = NA\n    ),\n    concentration = (10^log_concentration)*dilution_factors,\n    serostatus = if_else(concentration>0.1, \"positive\", \"negative\"),\n    source = if_else(str_detect(sample_id, \"^U\"), \"hcdc\", \"oucru\"),\n    age = case_when(\n      !is.na(dob) ~ as.double(difftime(date_collection, dob, unit = \"days\"))/365.25,\n      !is.na(exact_age) ~ exact_age, \n      !is.na(age_min) ~ age_min,\n      !is.na(age_max) ~ age_max,\n      .default = NA\n    ),\n    rounded_age = round(age)\n  ) %>% \n  filter(\n    province %in% c(\"HCMC\", \"Hồ Chí Minh\", \"HỒ CHÍ MINH\")\n  )\n\n\n\n\n\nVisualize distribution of concentration at different dilution levels and the positive threshold\n\n\nPlot distribution of log concentration at different dilutions\npreprocessed_data %>% \n  ggplot() +\n    geom_density(\n      aes(\n        x = concentration,\n        color = source\n      )\n    ) +\n    geom_vline(\n      aes(\n        xintercept = positive_threshold\n      ),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_x_log10() +\n    facet_wrap(~ dilution_factors)\n\n\n\n\n\n\n# which dilution factor for the following analyses\ndilution_fct <- 200\n\n\n\n\n\nDensity plotBoxplotRegression plot\n\n\nDistribution of concentration for each age group\n\n\nPlot distribution of concentration stratified by age\npreprocessed_data %>% \n  filter(\n    rounded_age <= 15,\n    dilution_factors == dilution_fct\n    ) %>% \n  ggplot() +\n    geom_density(\n      aes(\n        x = concentration,\n        color = source\n      )\n    ) +\n    geom_vline(\n      aes(xintercept = positive_threshold),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_x_log10()+\n    facet_wrap(~ rounded_age, scales = \"free_y\")\n\n\n\n\n\n\n\nBox plot of concentration per age group\n\n\nCode for box plot of concentration\npreprocessed_data %>% \n  filter(\n    rounded_age <= 15,\n    dilution_factors == dilution_fct\n    ) %>% \n  ggplot() +\n    geom_jitter(\n        aes(\n          x = source,\n          y = concentration,\n          color = source\n        ),\n        alpha = 0.2\n      ) +\n    geom_boxplot(\n      aes(\n        x = source,\n        y = concentration,\n        color = source\n      ),\n      fill = NA\n    ) +\n    geom_hline(\n      aes(yintercept = positive_threshold),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_y_log10()+\n    facet_wrap(~ rounded_age, scales = \"free_y\")\n\n\n\n\n\n\n\n\n\nCode for plotting concentration over age\npreprocessed_data %>% \n  filter(\n    rounded_age <= 15,\n    dilution_factors == dilution_fct\n    ) %>% \n  ggplot() +\n    geom_point(\n          aes(\n            x = age,\n            y = concentration,\n            color = source\n          ),\n          alpha = 0.2\n        ) +\n    geom_smooth(\n        aes(\n          x = age,\n          y = concentration,\n          color = source,\n          fill = source\n        ),\n        method = \"loess\"\n      ) +\n    geom_hline(\n      aes(yintercept = positive_threshold),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_y_log10()\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nNote:\n\nThere are no samples from OUCRU for age groups 3 - 5 and 12 - 15\n\nThe following table summarizes number of samples for each rounded age from each source\n\n\nCheck sample size for each age-group\npreprocessed_data %>% \n  filter(\n    rounded_age <= 15,\n    dilution_factors == dilution_fct\n    ) %>% \n  group_by(source, rounded_age) %>% \n  count() %>% \n  pivot_wider(\n    names_from = source,\n    values_from = n\n  )\n\n\n# A tibble: 16 × 3\n# Groups:   rounded_age [16]\n   rounded_age  hcdc oucru\n         <dbl> <int> <int>\n 1           0    10    36\n 2           1    39    25\n 3           2    28    NA\n 4           3    54    NA\n 5           4    63    NA\n 6           5    46    NA\n 7           6    41    11\n 8           7    37    39\n 9           8    42    35\n10           9    30    34\n11          10    31    35\n12          11    25    11\n13          12    22    NA\n14          13     6    NA\n15          14     6    NA\n16          15     1    NA\n\n\n\n\n\nSeparate the data into 2 age groups: <3 and 7-12 for comparison\n\n\nCompute age group for stratification\ndata_by_agegrp <- preprocessed_data %>%\n  mutate(\n    age_group = case_when(\n      age < 3 ~ \"< 3\",\n      age >= 7 & age <= 12 ~ \"7-12\",\n      .default = NA\n    )\n  ) %>% \n  filter(\n    !is.na(serostatus),\n    !is.na(age_group),\n    dilution_factors == dilution_fct\n  ) \n\n\nPerform two samples Wilcoxon test to compare distribution of concentration (on log scale) of 2 age groups (<3, 7-12) between OUCRU and HCDC samples\n\n\nPerform wilcoxon test to compare log concentration for 2 age groups\nconcentration_by_agegrp <- data_by_agegrp %>% \n  group_by(\n    age_group\n  ) %>% \n  nest() %>% # divide the data.frame by each age group\n  mutate(\n    # perform t.test to compare samples from each source\n    # t_test = map(data, \n    #   ~ t.test(\n    #     log_concentration ~ source, data = .x\n    #   )\n    # ),\n    # p_value = map_dbl(t_test, ~.x$p.value),\n    # perform two-sample wilcoxon test instead to compare samples from each source\n    wilcox = map(data, \n      ~ t.test(\n        log_concentration ~ source, data = .x\n      )\n    ),\n    p_value = map_dbl(wilcox, ~.x$p.value),\n    # compute summary for samples from each source (HCDC and OUCRU)\n    dat_summary = map(data, \\(dat){\n      dat %>% \n        group_by(source) %>% \n        summarize(\n          median_concentration = median(concentration),\n          lwr = quantile(concentration, probs = 0.25),\n          upper = quantile(concentration, probs = 0.75)\n        ) %>% \n        mutate(\n          label = sprintf(\"%.4f (%.4f–%.4f)\",\n          median_concentration,\n          lwr,\n          upper),\n          .keep = \"unused\"\n        )\n    }\n    )\n  ) %>% \n  unnest(\n    dat_summary\n  ) %>% \n  pivot_wider(\n    names_from = source,\n    values_from = label\n  )\n\n\n\n\nGenerate the comparison table\nconcentration_by_agegrp %>%\n  select(age_group, oucru, hcdc, p_value) %>% \n  ungroup() %>% \n  gt(rowname_col = \"age_group\") %>%\n  tab_header(title = \"Log(concentration) by sample source and age group\") %>% \n  tab_style(\n    style = list(cell_text(weight = \"bold\")),\n    locations = list(\n      cells_column_labels(everything()), \n      cells_stub()\n    )\n  )\n\n\n\n\n\n\n  \n    \n      Log(concentration) by sample source and age group\n    \n    \n    \n      \n      oucru\n      hcdc\n      p_value\n    \n  \n  \n    < 3\n0.6785 (0.2746–1.6855)\n0.9333 (0.3935–2.8357)\n0.3767952\n    7-12\n0.3187 (0.1287–1.0571)\n0.4078 (0.1331–1.7665)\n0.2340958\n  \n  \n  \n\n\n\n\nNote:\n\nThe result suggests that there is no statistically significant difference between log(concentration) of OUCRU and HCDC samples for both age groups.\n\nThe following plots demonstrate the distribution of log(concentration)\n\nDensity plotBox plot\n\n\n\n\nGenerate the density plot\nconcentration_by_agegrp %>%\n  unnest(data) %>% \n  ggplot() +\n    geom_density(\n      aes(\n        x = concentration,\n        color = source\n      )\n    ) +\n    geom_vline(\n      aes(xintercept = positive_threshold),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_x_log10() +\n    facet_wrap(~ age_group, scales = \"free_y\")\n\n\n\n\n\n\n\n\n\nGenerate the box plot\nconcentration_by_agegrp %>%\n  unnest(data) %>% \n  ggplot() +\n    geom_jitter(\n        aes(\n          x = source,\n          y = concentration,\n          color = source\n        ),\n        alpha = 0.2\n      ) +\n    geom_boxplot(\n      aes(\n        x = source,\n        y = concentration,\n        color = source\n      ),\n      fill = NA\n    ) +\n    geom_hline(\n      aes(yintercept = positive_threshold),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_y_log10()+\n    facet_wrap(~ age_group, scales = \"free_y\")"
  },
  {
    "objectID": "ida.html#concentration",
    "href": "ida.html#concentration",
    "title": "IDA for tetanus data",
    "section": "Concentration",
    "text": "Concentration\n\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(mgcv)\n\nall_tetanus <- readRDS(\"data/preprocessed/all_samples.rds\")\n\nThere is currently no specific threshold to classify tetanus serostatus, for this analysis, a conservative threshold of 0.1IU/ml is used.\n\n# threshold to be considered positive\npositive_threshold <- 0.1\n\n\nPreprocess data\n\nLabel whether it is oucru or hcdc sample\nCompute rounded age\nCompute titer\n\nUse median value to compute where available, use lower or upper otherwise\n\nLabel whether the sample is considered positive using 0.1IU/ml threshold\n\nAlso filter samples from HCMC only\n\n\nCode for preprocessing data\npreprocessed_data <- all_tetanus %>% \n  mutate(\n    log_titer = case_when(\n      !is.na(median) ~ median,\n      !is.na(upper) ~ upper,\n      !is.na(lower) ~ lower,\n      .default = NA\n    ),\n    titer = (10^log_titer)*dilution_factors,\n    serostatus = if_else(titer>0.1, \"positive\", \"negative\"),\n    source = if_else(str_detect(sample_id, \"^U\"), \"hcdc\", \"oucru\"),\n    age = case_when(\n      !is.na(dob) ~ as.double(difftime(date_collection, dob, unit = \"days\"))/365.25,\n      !is.na(exact_age) ~ exact_age, \n      !is.na(age_min) ~ age_min,\n      !is.na(age_max) ~ age_max,\n      .default = NA\n    ),\n    rounded_age = round(age)\n  ) %>% \n  filter(\n    province %in% c(\"HCMC\", \"Hồ Chí Minh\", \"HỒ CHÍ MINH\")\n  )\n\n\n\n\nDifferent dilutions\nVisualize distribution of titer at different dilution levels and the positive threshold\n\n\nPlot distribution of log titer at different dilutions\npreprocessed_data %>% \n  ggplot() +\n    geom_density(\n      aes(\n        x = titer,\n        color = source\n      )\n    ) +\n    geom_vline(\n      aes(\n        xintercept = positive_threshold\n      ),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_x_log10() +\n    facet_wrap(~ dilution_factors)\n\n\n\n\n\n\n# which dilution factor for the following analyses\ndilution_fct <- 200\n\n\n\nOUCRU vs HCDC titer\n\nDensity plotBoxplot\n\n\nDistribution of titer for each age group\n\n\nPlot distribution of titer stratified by age\npreprocessed_data %>% \n  filter(\n    rounded_age <= 15,\n    dilution_factors == dilution_fct\n    ) %>% \n  ggplot() +\n    geom_density(\n      aes(\n        x = titer,\n        color = source\n      )\n    ) +\n    geom_vline(\n      aes(xintercept = positive_threshold),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_x_log10()+\n    facet_wrap(~ rounded_age, scales = \"free_y\")\n\n\n\n\n\n\n\nBox plot of titer per age group\n\n\nCode for box plot of titer\npreprocessed_data %>% \n  filter(\n    rounded_age <= 15,\n    dilution_factors == dilution_fct\n    ) %>% \n  ggplot() +\n    geom_jitter(\n        aes(\n          x = source,\n          y = titer,\n          color = source\n        ),\n        alpha = 0.2\n      ) +\n    geom_boxplot(\n      aes(\n        x = source,\n        y = titer,\n        color = source\n      ),\n      fill = NA\n    ) +\n    geom_hline(\n      aes(yintercept = positive_threshold),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_y_log10()+\n    facet_wrap(~ rounded_age, scales = \"free_y\")\n\n\n\n\n\n\n\n\nNote:\n\nThere is no samples from OUCRU for age groups 2 - 5 and 12 - 15\n\nThe following table summarizes number of samples for each rounded age from each source\n\n\nCheck sample size for each age-group\npreprocessed_data %>% \n  filter(\n    rounded_age <= 15,\n    dilution_factors == dilution_fct\n    ) %>% \n  group_by(source, rounded_age) %>% \n  count() %>% \n  pivot_wider(\n    names_from = source,\n    values_from = n\n  )\n\n\n# A tibble: 16 × 3\n# Groups:   rounded_age [16]\n   rounded_age  hcdc oucru\n         <dbl> <int> <int>\n 1           0    10    36\n 2           1    39    25\n 3           2    28    NA\n 4           3    54    NA\n 5           4    63    NA\n 6           5    46    NA\n 7           6    41    11\n 8           7    37    39\n 9           8    42    35\n10           9    30    34\n11          10    31    35\n12          11    25    11\n13          12    22    NA\n14          13     6    NA\n15          14     6    NA\n16          15     1    NA\n\n\n\n\nStratified by age group\nSeparate the data into 2 age groups: <4 and 6-11 for comparison\n\n\nCompute age group for stratification\ndata_by_agegrp <- preprocessed_data %>%\n  mutate(\n    age_group = case_when(\n      age < 4 ~ \"< 4\",\n      age >= 6 & age <= 11 ~ \"6-11\"\n    ),\n    .default = NA\n  ) %>% \n  filter(\n    !is.na(serostatus),\n    !is.na(age_group),\n    dilution_factors == dilution_fct\n  ) \n\n\nPerform t-test to compare distribution of log(titer) of 2 age groups (<4, 6-11) between OUCRU and HCDC samples\n\n\nPerform t-test to compare log titer for 2 age groups\nconcentration_by_agegrp <- data_by_agegrp %>% \n  group_by(\n    age_group\n  ) %>% \n  nest() %>% # divide the data.frame by each age group\n  mutate(\n    # perform t.test to compare samples from each source\n    t_test = map(data, \n      ~ t.test(\n        log_titer ~ source, data = .x\n      )\n    ),\n    t_test_p = map_dbl(t_test, ~.x$p.value),\n    # compute summary for samples from each source (HCDC and OUCRU)\n    dat_summary = map(data, \\(dat){\n      dat %>% \n        group_by(source) %>% \n        summarize(\n          median_titer = median(titer),\n          lwr = quantile(titer, probs = 0.25),\n          upper = quantile(titer, probs = 0.75)\n        ) %>% \n        mutate(\n          label = sprintf(\"%.4f (%.4f–%.4f)\",\n          median_titer,\n          lwr,\n          upper),\n          .keep = \"unused\"\n        )\n    }\n    )\n  ) %>% \n  unnest(\n    dat_summary\n  ) %>% \n  pivot_wider(\n    names_from = source,\n    values_from = label\n  )\n\n\n\n\nGenerate the comparison table\nconcentration_by_agegrp %>%\n  select(age_group, oucru, hcdc, t_test_p) %>% \n  rename(\n    p_value = t_test_p\n  ) %>% \n  ungroup() %>% \n  gt(rowname_col = \"age_group\") %>%\n  tab_header(title = \"Log(titer) by sample source and age group\") %>% \n  tab_style(\n    style = list(cell_text(weight = \"bold\")),\n    locations = list(\n      cells_column_labels(everything()), \n      cells_stub()\n    )\n  )\n\n\n\n\n\n\n  \n    \n      Log(titer) by sample source and age group\n    \n    \n    \n      \n      oucru\n      hcdc\n      p_value\n    \n  \n  \n    < 4\n0.6785 (0.2746–1.6855)\n1.0190 (0.3935–2.4593)\n0.41108950\n    6-11\n0.3003 (0.1272–1.0368)\n0.4920 (0.1667–2.0445)\n0.01841121\n  \n  \n  \n\n\n\n\nNote:\n\nThe result suggests that there is a statistically significant difference between log(titer) of OUCRU and HCDC samples for older age group (6-11), more specifically: log(titer) from HCDC samples is higher.\n\nThe following plots demonstrate the distribution of log(titer)\n\nDensity plotBox plot\n\n\n\n\nGenerate the density plot\nconcentration_by_agegrp %>%\n  unnest(data) %>% \n  ggplot() +\n    geom_density(\n      aes(\n        x = titer,\n        color = source\n      )\n    ) +\n    geom_vline(\n      aes(xintercept = positive_threshold),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_x_log10() +\n    facet_wrap(~ age_group, scales = \"free_y\")\n\n\n\n\n\n\n\n\n\nGenerate the box plot\nconcentration_by_agegrp %>%\n  unnest(data) %>% \n  ggplot() +\n    geom_jitter(\n        aes(\n          x = source,\n          y = titer,\n          color = source\n        ),\n        alpha = 0.2\n      ) +\n    geom_boxplot(\n      aes(\n        x = source,\n        y = titer,\n        color = source\n      ),\n      fill = NA\n    ) +\n    geom_hline(\n      aes(yintercept = positive_threshold),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_y_log10()+\n    facet_wrap(~ age_group, scales = \"free_y\")"
  },
  {
    "objectID": "ida.html#seroprevalence",
    "href": "ida.html#seroprevalence",
    "title": "IDA for tetanus data",
    "section": "Seroprevalence",
    "text": "Seroprevalence\n\nComparison table\n\n\nCompute prevalence and confidence interval\nprevalence_by_agegrp <- data_by_agegrp %>% \n  group_by(\n    source, age_group\n  ) %>% \n  summarize(\n    seropositive = sum(serostatus == \"positive\"),\n    sample_size = n()\n  ) %>% \n  rowwise() %>% \n  mutate(\n    seroprevalence = seropositive/sample_size,\n    seroprevalence_ci = list(\n      prop.test(\n      x = seropositive, n = sample_size,\n      conf.level = 0.95)$conf.int\n    ),\n    seroprevalence_lwr = seroprevalence_ci[[1]],\n    seroprevalence_upper = seroprevalence_ci[[2]]\n  ) %>% \n  ungroup()\n\n\n`summarise()` has grouped output by 'source'. You can override using the\n`.groups` argument.\n\n\nSeroprevalence with confidence intervals\n\n\ngenerate the table\nprevalence_by_agegrp %>%\n  mutate(\n    label = sprintf(\"%.1f%% (%.1f–%.1f%%)\",\n        100 * seroprevalence,\n        100 * seroprevalence_lwr,\n        100 * seroprevalence_upper)\n  ) %>% \n  select(source, age_group, label) %>%\n  pivot_wider(names_from = source,\n              values_from = label) %>%\n  gt(rowname_col = \"age_group\") %>%\n  tab_header(title = \"Seroprevalence by sample source and age group\") %>% \n  tab_style(\n    style = list(cell_text(weight = \"bold\")),\n    locations = list(\n      cells_column_labels(everything()), \n      cells_stub()\n    )\n  )\n\n\n\n\n\n\n  \n    \n      Seroprevalence by sample source and age group\n    \n    \n    \n      \n      hcdc\n      oucru\n    \n  \n  \n    7-12\n81.4% (73.9–87.2%)\n86.3% (79.2–91.4%)\n    < 3\n93.4% (84.7–97.6%)\n93.3% (83.0–97.8%)\n  \n  \n  \n\n\n\n\nComparison tables with p-value. Only samples from the 2 age groups <3 and 7-12 are included.\n\nOverallBy age group\n\n\nChi-squared test\n\n\ngenerate the summary table\nlibrary(gtsummary)\n\ndata_by_agegrp %>% \n  select(serostatus, source) %>% \n  tbl_summary(\n    by = source,          \n    type = all_categorical() ~ \"categorical\",\n    missing = \"no\"\n  ) %>%\n  add_p(test = everything() ~ \"chisq.test\") %>%  \n  add_n() %>%                                    \n  bold_labels()\n\n\n\n\n\n\n  \n    \n      Characteristic\n      N\n      hcdc\nN = 2211\n      oucru\nN = 1991\n      p-value2\n    \n  \n  \n    serostatus\n420\n\n\n0.5\n        negative\n\n32 (14%)\n23 (12%)\n\n        positive\n\n189 (86%)\n176 (88%)\n\n  \n  \n  \n    \n      1 n (%)\n    \n    \n      2 Pearson’s Chi-squared test\n    \n  \n\n\n\n\n\n\n\n\nperform Fisher exact test\nprevalence_compare <- data_by_agegrp %>% \n  group_by(\n    age_group\n  ) %>% \n  nest() %>% # divide the data.frame by each age group\n  mutate(\n    # perform fisher.test to compare samples from each source\n    fisher_test = map(data, \n      \\(df){\n        tab <- table(df$serostatus, df$source)\n        fisher.test(tab)\n      }\n    ),\n    fisher_test_p = map_dbl(fisher_test, ~.x$p.value),\n    odd_ratio = map_chr(fisher_test, \\(out){\n      sprintf(\"%.3f (%.3f–%.3f)\",\n        out$estimate,\n        out$conf.int[1],\n        out$conf.int[2])\n    }),\n    # compute summary for samples from each source (HCDC and OUCRU)\n    dat_summary = map(data, \\(dat){\n      dat %>% \n        group_by(source) %>% \n        summarize(\n          label = paste0(sum(serostatus == \"positive\"), \"/\", n())\n        )\n    }\n    )\n  ) %>% \n  unnest(\n    dat_summary\n  ) %>% \n  pivot_wider(\n    names_from = source,\n    values_from = label\n  )\n\n\nCheck the negative-positive counts for each age group\n\nmap(prevalence_compare$data, \n  \\(df){\n    table(df$serostatus, df$source)\n})\n\n[[1]]\n          \n           hcdc oucru\n  negative    5     4\n  positive   71    56\n\n[[2]]\n          \n           hcdc oucru\n  negative   27    19\n  positive  118   120\n\n\nComparison table with p-value from the Fisher exact test\n\n\ngenerate the table\nprevalence_compare %>%\n  select(age_group, hcdc, oucru, odd_ratio, fisher_test_p) %>%\n  ungroup() %>% \n  rename(\n    p_val = fisher_test_p,\n    `HCDC (pos/tot)` = hcdc,\n    `OUCRU (pos/tot)` = oucru,\n    `Odd ratio (95% CI)` = odd_ratio\n  ) %>% \n  gt(rowname_col = \"age_group\") %>%\n  tab_header(title = \"Compare prevalence by sample source and age group\") %>% \n  tab_style(\n    style = list(cell_text(weight = \"bold\")),\n    locations = list(\n      cells_column_labels(everything()),\n      cells_stub()\n    )\n  ) %>%\n  fmt_number(\n    columns = where(is.numeric),\n    decimals = 4\n  )\n\n\n\n\n\n\n  \n    \n      Compare prevalence by sample source and age group\n    \n    \n    \n      \n      HCDC (pos/tot)\n      OUCRU (pos/tot)\n      Odd ratio (95% CI)\n      p_val\n    \n  \n  \n    < 3\n71/76\n56/60\n0.986 (0.202–5.211)\n1.0000\n    7-12\n118/145\n120/139\n1.443 (0.729–2.908)\n0.2652\n  \n  \n  \n\n\n\n\n\n\n\n\n\nAge stratified seroprevalence\n\n\nHelper function to compute age-stratified seroprev\ncompute_seroprev <- function(data, age_lim, dilution_fct, group_var){\n  if(!is.null(group_var)){\n    out <- data %>% \n      filter(age<=age_lim, dilution_factors == dilution_fct) %>% \n      mutate(\n        serostatus = if_else(serostatus == \"positive\", 1, 0),\n        !! group_var := factor(.data[[group_var]])\n      ) %>% \n      group_by(rounded_age, .data[[group_var]]) %>% \n      summarize(\n        pos = sum(serostatus, na.rm = TRUE),\n        tot = n(),\n        neg = tot - pos,\n        seroprev = sum(serostatus, na.rm = TRUE)/n()\n      ) %>% \n      ungroup()\n  }else{\n    out <- data %>% \n      filter(age<=age_lim, dilution_factors == dilution_fct) %>% \n      mutate(\n        serostatus = if_else(serostatus == \"positive\", 1, 0)\n      ) %>% \n      group_by(rounded_age) %>% \n      summarize(\n        pos = sum(serostatus, na.rm = TRUE),\n        tot = n(),\n        neg = tot - pos,\n        seroprev = sum(serostatus, na.rm = TRUE)/n()\n      ) %>% \n      ungroup()\n  }\n  \n  out\n}\n\n\nCheck whether there is a difference in seroprevalence between:\n\nOUCRU and HCDC samples\nfemale and male samples\n\n\nSourceGenderNo stratification\n\n\n\n\nModel stratified by source\n# ----- Model with smoothing stratified by source ------\nseroprev_mod_source <- preprocessed_data %>% \n  compute_seroprev(age_lim = 15, dilution_fct = dilution_fct, group_var = \"source\") %>% \n  gam(cbind(pos, neg) ~ s(rounded_age, bs = \"bs\", by = source) + source, data = ., family=binomial(link = \"logit\"))\nsummary(seroprev_mod_source)\n\n\n\nFamily: binomial \nLink function: logit \n\nFormula:\ncbind(pos, neg) ~ s(rounded_age, bs = \"bs\", by = source) + source\n\nParametric coefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   1.0833     0.1254   8.639  < 2e-16 ***\nsourceoucru   0.7171     0.2313   3.101  0.00193 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n                             edf Ref.df Chi.sq p-value\ns(rounded_age):sourcehcdc  3.201  3.964  5.532   0.204\ns(rounded_age):sourceoucru 1.000  1.000  2.021   0.155\n\nR-sq.(adj) =  0.384   Deviance explained = 51.9%\nUBRE = 0.29707  Scale est. = 1         n = 24\n\n\n\n\n\n\nModel stratified by gender\n# ----- Model with smoothing stratified by gender ------\nseroprev_mod_gender <- preprocessed_data %>% \n  compute_seroprev(age_lim = 15, dilution_fct = dilution_fct, group_var = \"gender\") %>% \n  gam(cbind(pos, neg) ~ s(rounded_age, bs = \"bs\", by = gender) + gender, data = ., family=binomial(link = \"logit\"))\nsummary(seroprev_mod_gender)\n\n\n\nFamily: binomial \nLink function: logit \n\nFormula:\ncbind(pos, neg) ~ s(rounded_age, bs = \"bs\", by = gender) + gender\n\nParametric coefficients:\n            Estimate Std. Error z value Pr(>|z|)   \n(Intercept)   1.4464     0.4409   3.281  0.00104 **\ngendermale   -0.1741     0.4586  -0.380  0.70425   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n                              edf Ref.df Chi.sq p-value  \ns(rounded_age):genderfemale 3.202  3.962  9.037  0.0766 .\ns(rounded_age):gendermale   4.099  4.984  9.732  0.0866 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.355   Deviance explained = 51.3%\nUBRE = 0.39283  Scale est. = 1         n = 29\n\n\nModel stratified by gender\n# ----- Baseline model (no stratification) ------\nseroprev_mod <- preprocessed_data %>% \n  compute_seroprev(age_lim = 15, dilution_fct = dilution_fct, group_var = NULL) %>%\n  gam(cbind(pos, neg) ~ s(rounded_age, bs = \"bs\"), data = ., family=binomial(link = \"logit\"))\nsummary(seroprev_mod)\n\n\n\nFamily: binomial \nLink function: logit \n\nFormula:\ncbind(pos, neg) ~ s(rounded_age, bs = \"bs\")\n\nParametric coefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   1.2720     0.1422   8.946   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n                 edf Ref.df Chi.sq p-value\ns(rounded_age) 4.157  5.049  7.147   0.209\n\nR-sq.(adj) =  0.213   Deviance explained =   42%\nUBRE = 0.47588  Scale est. = 1         n = 16\n\n\n\n\n\n\nModel without stratification for smoothing\n# ----- Baseline model (no stratification) ------\nseroprev_mod <- preprocessed_data %>% \n  compute_seroprev(age_lim = 15, dilution_fct = dilution_fct, group_var = NULL) %>%\n  gam(cbind(pos, neg) ~ s(rounded_age, bs = \"bs\"), data = ., family=binomial(link = \"logit\"))\nsummary(seroprev_mod)\n\n\n\nFamily: binomial \nLink function: logit \n\nFormula:\ncbind(pos, neg) ~ s(rounded_age, bs = \"bs\")\n\nParametric coefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   1.2720     0.1422   8.946   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n                 edf Ref.df Chi.sq p-value\ns(rounded_age) 4.157  5.049  7.147   0.209\n\nR-sq.(adj) =  0.213   Deviance explained =   42%\nUBRE = 0.47588  Scale est. = 1         n = 16\n\n\n\n\n\nNote:\nThe result from model stratified by (sample) source suggests that:\n\nSeroprevalence of OUCRU samples is higher (for age group <= 15)\n\nThe result from model stratified by gender suggests that:\n\nThere’s no statistically significant difference in seroprevalence between male and female samples (for age group <= 15)\n\nHowever, it may be due to the fact that the sample size for OUCRU samples is quite small and we don’t have any data for several age groups (3-6, 11-14)\nAnother issue is that there is an imbalance in the number of male vs female samples (male:female ratio is 13.58:1)\n\npreprocessed_data %>% \n  filter(source == \"hcdc\", dilution_factors == dilution_fct) %>% \n  group_by(gender) %>% \n  count()\n\n# A tibble: 2 × 2\n# Groups:   gender [2]\n  gender     n\n  <chr>  <int>\n1 female    33\n2 male     448\n\n\n\n\nQuick visualization\nVisualize the model for source/gender stratified smoothing\n\n\nHelper function to visualize model with confidence interval\nvisualize_pred <- function(data, mod, group_var, ci = 0.95, length_out = 100, cex = 20){\n  \n  if(!is.null(group_var)){\n    newdata <- data %>% \n      select({{group_var}}) %>% \n      distinct() %>% \n      crossing(\n        rounded_age = seq(min(data$rounded_age), max(data$rounded_age), length.out = length_out)\n      )\n  }else{\n    newdata <- data.frame(\n      rounded_age = seq(min(data$rounded_age), max(data$rounded_age), length.out = length_out)\n    )\n  }\n  \n  \n  linkinv <- mod$family$linkinv\n  p <- (1 - ci) / 2\n  n <- mod$df.residual\n  \n  out <- predict.gam(\n    mod,\n    newdata = newdata, se.fit = TRUE) %>% \n  as_tibble() %>% \n  select(fit, se.fit) %>% \n  mutate(\n    rounded_age = newdata$rounded_age,\n    \n    lower = linkinv(fit + qt(p, n) * se.fit),\n    upper = linkinv(fit + qt(1 - p, n) * se.fit),\n    fit = linkinv(fit)\n  )\n  \n  if(!is.null(group_var)){\n    out <- out %>% \n      mutate(\n        !! group_var := newdata[[group_var]]\n      )\n  }\n  \n  ggplot() +\n    geom_smooth(\n      aes(\n        x = rounded_age, y = fit, \n        ymin = lower, ymax = upper,\n        color = if(!is.null(group_var)) factor(.data[[group_var]]) else \"cornflowerblue\"),\n      data = out,\n      stat = \"identity\"\n    ) +\n    geom_point(\n      aes(\n        x = rounded_age, y = seroprev, \n        size = cex*(pos)/max(tot), \n        color = if(!is.null(group_var)) factor(.data[[group_var]]) else \"black\"),\n      shape = 1,\n      data = data\n    ) +\n    guides(size = \"none\") +\n    labs(x = \"Age (years)\",\n         y = \"Seroprevalence\",\n         color = if(!is.null(group_var)) str_to_title(group_var) else \"\") \n}\n\n\n\nSourceGender\n\n\n\npreprocessed_data %>% \n  compute_seroprev(age_lim = 15, dilution_fct = dilution_fct, group_var = \"source\") %>% \n  visualize_pred(mod = seroprev_mod_source, group_var = \"source\")\n\n\n\n\n\n\nImbalance in sample size causes larger CI interval for female\n\npreprocessed_data %>% \n  compute_seroprev(age_lim = 15, dilution_fct = dilution_fct, group_var = \"gender\") %>% \n  visualize_pred(mod = seroprev_mod_gender, group_var = \"gender\")"
  },
  {
    "objectID": "ida.html#hcdc-samples---a-closer-look",
    "href": "ida.html#hcdc-samples---a-closer-look",
    "title": "IDA for tetanus data",
    "section": "HCDC samples - a closer look",
    "text": "HCDC samples - a closer look\n\nSeroprevalence - FOI by age\n\n\nAge-stratified seroprevalence across HCDC samples\nlibrary(serosv)\n\n# use rounded age\npreprocessed_data %>% \n  filter(\n    source == \"hcdc\", \n    rounded_age < 15,\n    dilution_factors == dilution_fct) %>% \n  select(rounded_age, serostatus) %>% \n  mutate(\n    status = if_else(serostatus == \"positive\", 1, 0)\n  ) %>% \n  rename(\n    age = rounded_age\n  ) %>% \n  penalized_spline_model() %>% \n  plot()\n\n\n\n\n\n\n\nSample distribution by district\n\npreprocessed_data %>% \n  filter(source == \"hcdc\") %>% \n  generate_district_plots() %>% \n  pull(age_gender_plot)\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]"
  }
]