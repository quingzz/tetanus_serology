[
  {
    "objectID": "ida.html",
    "href": "ida.html",
    "title": "IDA for tetanus data",
    "section": "",
    "text": "# TODO: what can we do with the data \n# - compare antibody titer between oucru samples vs hcdc samples \n# - compare seroprevalence\n# - probably also check titer"
  },
  {
    "objectID": "ida.html#concentration",
    "href": "ida.html#concentration",
    "title": "IDA for tetanus data",
    "section": "Concentration",
    "text": "Concentration\n\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(mgcv)\n\nall_tetanus <- readRDS(\"data/preprocessed/all_samples.rds\")\n\nThere is currently no specific threshold to classify tetanus serostatus, for this analysis, a conservative threshold of 0.1IU/ml is used.\n\n# threshold to be considered positive\npositive_threshold <- 0.1\n\n\nPreprocess data\n\nLabel whether it is oucru or hcdc sample\nCompute rounded age\nCompute titer\n\nUse median value to compute where available, use lower or upper otherwise\n\nLabel whether the sample is considered positive using 0.1IU/ml threshold\n\nAlso filter samples from HCMC only\n\n\nCode for preprocessing data\npreprocessed_data <- all_tetanus %>% \n  mutate(\n    log_titer = case_when(\n      !is.na(median) ~ median,\n      !is.na(upper) ~ upper,\n      !is.na(lower) ~ lower,\n      .default = NA\n    ),\n    titer = (10^log_titer)*dilution_factors,\n    serostatus = if_else(titer>0.1, \"positive\", \"negative\"),\n    source = if_else(str_detect(sample_id, \"^U\"), \"hcdc\", \"oucru\"),\n    age = case_when(\n      !is.na(dob) ~ as.double(difftime(date_collection, dob, unit = \"days\"))/365.25,\n      !is.na(exact_age) ~ exact_age, \n      !is.na(age_min) ~ age_min,\n      !is.na(age_max) ~ age_max,\n      .default = NA\n    ),\n    rounded_age = round(age)\n  ) %>% \n  filter(\n    province %in% c(\"HCMC\", \"Hồ Chí Minh\", \"HỒ CHÍ MINH\")\n  )\n\n\n\n\nDifferent dilutions\nVisualize distribution of titer at different dilution levels and the positive threshold\n\n\nPlot distribution of log titer at different dilutions\npreprocessed_data %>% \n  ggplot() +\n    geom_density(\n      aes(\n        x = titer,\n        color = source\n      )\n    ) +\n    geom_vline(\n      aes(\n        xintercept = positive_threshold\n      ),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_x_log10() +\n    facet_wrap(~ dilution_factors)\n\n\n\n\n\n\n# which dilution factor for the following analyses\ndilution_fct <- 200\n\n\n\nOUCRU vs HCDC titer\n\nDensity plotBoxplot\n\n\nDistribution of titer for each age group\n\n\nPlot distribution of titer stratified by age\npreprocessed_data %>% \n  filter(\n    rounded_age <= 15,\n    dilution_factors == dilution_fct\n    ) %>% \n  ggplot() +\n    geom_density(\n      aes(\n        x = titer,\n        color = source\n      )\n    ) +\n    geom_vline(\n      aes(xintercept = positive_threshold),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_x_log10()+\n    facet_wrap(~ rounded_age, scales = \"free_y\")\n\n\n\n\n\n\n\nBox plot of titer per age group\n\n\nCode for box plot of titer\npreprocessed_data %>% \n  filter(\n    rounded_age <= 15,\n    dilution_factors == dilution_fct\n    ) %>% \n  ggplot() +\n    geom_jitter(\n        aes(\n          x = source,\n          y = titer,\n          color = source\n        ),\n        alpha = 0.2\n      ) +\n    geom_boxplot(\n      aes(\n        x = source,\n        y = titer,\n        color = source\n      ),\n      fill = NA\n    ) +\n    geom_hline(\n      aes(yintercept = positive_threshold),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_y_log10()+\n    facet_wrap(~ rounded_age, scales = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nStratified by age group\n\n\nCompute age group for stratification\ndata_by_agegrp <- preprocessed_data %>%\n  mutate(\n    age_group = case_when(\n      age < 4 ~ \"< 4\",\n      age >= 6 & age <= 11 ~ \"6-11\"\n    ),\n    .default = NA\n  ) %>% \n  filter(\n    !is.na(serostatus),\n    !is.na(age_group),\n    dilution_factors == dilution_fct\n  ) \n\n\nPerform t test to compare distribution of concentration of 2 age groups (<4, 6-11) between OUCRU and HCDC samples\n\n\nPerform t-test to compare concentration for 2 age groups\nconcentration_by_agegrp <- data_by_agegrp %>% \n  group_by(\n    age_group\n  ) %>% \n  nest() %>% # divide the data.frame by each age group\n  mutate(\n    # perform t.test to compare samples from each source\n    t_test = map(data, \n      ~ t.test(\n        log_titer ~ source, data = .x\n      )\n    ),\n    t_test_p = map_dbl(t_test, ~.x$p.value),\n    # compute summary for samples from each source (HCDC and OUCRU)\n    dat_summary = map(data, \\(dat){\n      dat %>% \n        group_by(source) %>% \n        summarize(\n          median_titer = median(titer),\n          lwr = quantile(titer, probs = 0.25),\n          upper = quantile(titer, probs = 0.75)\n        ) %>% \n        mutate(\n          label = sprintf(\"%.4f (%.4f–%.4f)\",\n          median_titer,\n          lwr,\n          upper),\n          .keep = \"unused\"\n        )\n    }\n    )\n  ) %>% \n  unnest(\n    dat_summary\n  ) %>% \n  pivot_wider(\n    names_from = source,\n    values_from = label\n  )\n\n\n\n\nGenerate the comparison table\nconcentration_by_agegrp %>%\n  select(age_group, oucru, hcdc, t_test_p) %>% \n  rename(\n    p_value = t_test_p\n  ) %>% \n  ungroup() %>% \n  gt(rowname_col = \"age_group\") %>%\n  tab_header(title = \"Titer by sample source and age group\") %>% \n  tab_style(\n    style = list(cell_text(weight = \"bold\")),\n    locations = list(\n      cells_column_labels(everything()), \n      cells_stub()\n    )\n  )\n\n\n\n\n\n\n  \n    \n      Titer by sample source and age group\n    \n    \n    \n      \n      oucru\n      hcdc\n      p_value\n    \n  \n  \n    < 4\n0.6785 (0.2746–1.6855)\n1.0190 (0.3935–2.4593)\n0.41108950\n    6-11\n0.3003 (0.1272–1.0368)\n0.4920 (0.1667–2.0445)\n0.01841121\n  \n  \n  \n\n\n\n\n\nDensity plotBox plot\n\n\n\n\nGenerate the density plot\nconcentration_by_agegrp %>%\n  unnest(data) %>% \n  ggplot() +\n    geom_density(\n      aes(\n        x = titer,\n        color = source\n      )\n    ) +\n    geom_vline(\n      aes(xintercept = positive_threshold),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_x_log10() +\n    facet_wrap(~ age_group, scales = \"free_y\")\n\n\n\n\n\n\n\n\n\nGenerate the box plot\nconcentration_by_agegrp %>%\n  unnest(data) %>% \n  ggplot() +\n    geom_jitter(\n        aes(\n          x = source,\n          y = titer,\n          color = source\n        ),\n        alpha = 0.2\n      ) +\n    geom_boxplot(\n      aes(\n        x = source,\n        y = titer,\n        color = source\n      ),\n      fill = NA\n    ) +\n    geom_hline(\n      aes(yintercept = positive_threshold),\n      color = \"green\",\n      linetype = \"dashed\"\n    ) +\n    scale_y_log10()+\n    facet_wrap(~ age_group, scales = \"free_y\")"
  },
  {
    "objectID": "ida.html#seroprevalence",
    "href": "ida.html#seroprevalence",
    "title": "IDA for tetanus data",
    "section": "Seroprevalence",
    "text": "Seroprevalence\n\nComparison table\n\n\nCompute prevalence and confidence interval\nprevalence_by_agegrp <- data_by_agegrp %>% \n  group_by(\n    source, age_group\n  ) %>% \n  summarize(\n    seropositive = sum(serostatus == \"positive\"),\n    sample_size = n()\n  ) %>% \n  rowwise() %>% \n  mutate(\n    seroprevalence = seropositive/sample_size,\n    seroprevalence_ci = list(\n      prop.test(\n      x = seropositive, n = sample_size,\n      conf.level = 0.95)$conf.int\n    ),\n    seroprevalence_lwr = seroprevalence_ci[[1]],\n    seroprevalence_upper = seroprevalence_ci[[2]]\n  )\n\n\n`summarise()` has grouped output by 'source'. You can override using the\n`.groups` argument.\n\n\n\n\ngenerate the table\nprevalence_by_agegrp %>%\n  mutate(\n    label = sprintf(\"%.1f%% (%.1f–%.1f%%)\",\n        100 * seroprevalence,\n        100 * seroprevalence_lwr,\n        100 * seroprevalence_upper)\n  ) %>% \n  select(source, age_group, label) %>%\n  pivot_wider(names_from = source,\n              values_from = label) %>%\n  gt(rowname_col = \"age_group\") %>%\n  tab_header(title = \"Seroprevalence by sample source and age group\") %>% \n  tab_style(\n    style = list(cell_text(weight = \"bold\")),\n    locations = list(\n      cells_column_labels(everything()), \n      cells_stub()\n    )\n  )\n\n\n\n\n\n\n  \n    \n      Seroprevalence by sample source and age group\n    \n    \n    \n      \n      hcdc\n      oucru\n    \n  \n  \n    6-11\n87.2% (80.6–92.0%)\n85.6% (79.0–90.5%)\n    < 4\n91.9% (85.3–95.8%)\n93.3% (83.0–97.8%)\n  \n  \n  \n\n\n\n\n\n\nAge stratified seroprevalence\nCheck whether there is a statistically significant between the age-stratified seroprevalence between OUCRU and HCDC samples\n\n\nCompare age-stratified prevalence between 2 samples\nseroprev_mod_source <- preprocessed_data %>% \n  filter(age<=15, dilution_factors == dilution_fct) %>% \n  mutate(\n    serostatus = if_else(serostatus == \"positive\", 1, 0)\n  ) %>% \n  gamm(serostatus ~ s(age), data = ., \n       random = list(\n         source = ~1\n       ))\n\nseroprev_mod_gender <- preprocessed_data %>% \n  filter(age<=15, dilution_factors == dilution_fct) %>% \n  mutate(\n    serostatus = if_else(serostatus == \"positive\", 1, 0)\n  ) %>% \n  gamm(serostatus ~ s(age), data = ., \n       random = list(\n         gender = ~1\n       ))\n\n\nWarning in lme.formula(y ~ X - 1, random = rand, data = strip.offset(mf), : nlminb problem, convergence error code = 1\n  message = singular convergence (7)\n\n\nCompare age-stratified prevalence between 2 samples\nseroprev_mod <- preprocessed_data %>% \n  filter(age<=15, dilution_factors == dilution_fct) %>% \n  mutate(\n    serostatus = if_else(serostatus == \"positive\", 1, 0)\n  ) %>% \n  gamm(serostatus ~ s(age), data = .)\n\n# compare the random effects\nanova(seroprev_mod_source$lme, seroprev_mod$lme)\n\n\n                        Model df      AIC      BIC    logLik   Test    L.Ratio\nseroprev_mod_source$lme     1  5 367.2701 389.5539 -178.6350                  \nseroprev_mod$lme            2  4 365.3423 383.1694 -178.6712 1 vs 2 0.07223569\n                        p-value\nseroprev_mod_source$lme        \nseroprev_mod$lme         0.7881\n\n\nCompare age-stratified prevalence between 2 samples\nanova(seroprev_mod_gender$lme, seroprev_mod$lme)\n\n\n                        Model df      AIC      BIC    logLik   Test    L.Ratio\nseroprev_mod_gender$lme     1  5 367.2701 389.5539 -178.6350                  \nseroprev_mod$lme            2  4 365.3423 383.1694 -178.6712 1 vs 2 0.07223554\n                        p-value\nseroprev_mod_gender$lme        \nseroprev_mod$lme         0.7881\n\n\nThe result from ANOVA suggest that:\n\nThere’s no statistically significant difference in age stratified seroprevalence between OUCRU & HCDC samples (for age group <= 15)\nThere’s no statistically significant difference in age stratified seroprevalence between male and female samples (for age group <= 15)\n\nHowever, it may be due to the fact that the sample size for OUCRU samples is quite small and we don’t have any data for several age groups (2-5, 11-14)\nAnother issue is that there is an imbalance in the number of male vs female samples (male:female ratio is 13.58:1)\n\npreprocessed_data %>% \n  filter(source == \"hcdc\", dilution_factors == dilution_fct) %>% \n  group_by(gender) %>% \n  count()\n\n# A tibble: 2 × 2\n# Groups:   gender [2]\n  gender     n\n  <chr>  <int>\n1 female    33\n2 male     448"
  },
  {
    "objectID": "ida.html#hcdc-samples---a-closer-look",
    "href": "ida.html#hcdc-samples---a-closer-look",
    "title": "IDA for tetanus data",
    "section": "HCDC samples - a closer look",
    "text": "HCDC samples - a closer look\n\nSeroprevalence by age\n\n\nAge-stratified seroprevalence across all HCM samples\nlibrary(serosv)\n\n\nWarning: package 'serosv' was built under R version 4.3.3\n\n\nAge-stratified seroprevalence across all HCM samples\n# use rounded age\npreprocessed_data %>% \n  filter(\n    source == \"hcdc\", \n    rounded_age < 15,\n    dilution_factors == dilution_fct) %>% \n  select(rounded_age, serostatus) %>% \n  mutate(\n    status = if_else(serostatus == \"positive\", 1, 0)\n  ) %>% \n  rename(\n    age = rounded_age\n  ) %>% \n  penalized_spline_model() %>% \n  plot()\n\n\nWarning: Removed 13 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\nSeroprevalence by district\n\npreprocessed_data %>% \n  filter(source == \"hcdc\") %>% \n  generate_district_plots() %>% \n  pull(age_gender_plot)\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]"
  }
]